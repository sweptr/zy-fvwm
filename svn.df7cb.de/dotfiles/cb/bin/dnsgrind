#!/usr/bin/perl -w

# Copyright (c) 2008 Christoph Berg <cb@df7cb.de>
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

use strict;
use Net::DNS;

my %cache;
my $res = Net::DNS::Resolver->new;

my ($c1, $c2) = ("", "");
($c1, $c2) = ("\033[32m", "\033[0m") if (-t 1);

sub dns ($$);

sub dns ($$)
{
	my ($q, $depth) = @_;
	return if $cache{$q};
	$cache{$q} = 1;

	my $query = $res->search($q, 'ANY');
	if (! $query) {
		warn "    " x $depth, "$c1$q$c2 query failed: ", $res->errorstring, "\n";
		return;
	}
	foreach my $rr ($query->answer) {
		my $t = $rr->type;
		my $a = $rr->rdatastr;
		print "    " x $depth, "$c1$q$c2 $t $a\n";
		if ($t eq 'MX') {
			$a =~ s/\d+ //;
		} elsif ($t eq 'TXT') {
			next;
		} elsif ($t eq 'SOA') {
			next;
		} elsif ($t eq 'SSHFP') {
			next;
		}

		next unless $a;
		dns ($a, $depth + 1);
	}
}

for my $host (@ARGV) {
	dns ($host, 0);
}
